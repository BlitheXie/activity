<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.activity.dao.CommentForCommentMapper" >
  <resultMap id="BaseResultMap" type="cn.activity.domain.CommentForComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="answer_id" property="answerId" jdbcType="INTEGER" />
    <result column="answer_for_userid" property="answerForUserid" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_comment" property="lastComment" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_for_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.activity.domain.CommentForComment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment_for_comment (id, answer_id, answer_for_userid, 
      user_id, comment_id, comment, 
      create_time, last_comment, content
      )
    values (#{id,jdbcType=INTEGER}, #{answerId,jdbcType=INTEGER}, #{answerForUserid,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{comment,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastComment,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.activity.domain.CommentForComment" >
    update comment_for_comment
    set answer_id = #{answerId,jdbcType=INTEGER},
      answer_for_userid = #{answerForUserid,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_comment = #{lastComment,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, answer_id, answer_for_userid, user_id, comment_id, comment, create_time, 
    last_comment, content
    from comment_for_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, answer_id, answer_for_userid, user_id, comment_id, comment, create_time, 
    last_comment, content
    from comment_for_comment
  </select>
</mapper>